# .github/workflows/daily-stock-check.yml
# Workflow para execução automática diária do sistema de verificação de estoque

name: 🤖 Daily Stock Check - Sistema Magento

on:
  schedule:
    - cron: '0 9 * * *'  # Executa todo dia às 09:00 UTC (06:00 BRT)
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Modo de teste (apenas poucos produtos)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      batch_size:
        description: 'Tamanho do batch'
        required: false
        default: '50'

jobs:
  stock-check:
    name: 📊 Verificação de Estoque
    runs-on: ubuntu-latest
    timeout-minutes: 300  # 5 horas max

    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4

    - name: 🐍 Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: 📦 Instalar dependências
      run: |
        pip install --upgrade pip
        pip cache purge
        pip install -r requirements.txt --verbose

    - name: 🔐 Configurar credenciais Google
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      run: |
        echo "$GOOGLE_CREDENTIALS" > /tmp/google-credentials.json
        export GOOGLE_APPLICATION_CREDENTIALS=/tmp/google-credentials.json

    - name: 📊 Executar verificação de estoque
      env:
        GOOGLE_APPLICATION_CREDENTIALS: /tmp/google-credentials.json
        SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
        MAGENTO_API_KEY: ${{ secrets.MAGENTO_API_KEY }}
        MAGENTO_BASE_URL: ${{ secrets.MAGENTO_BASE_URL }}
        TEST_MODE: ${{ github.event.inputs.test_mode || 'false' }}
        BATCH_SIZE: ${{ github.event.inputs.batch_size || '50' }}
      run: |
        echo "🚀 Iniciando verificação de estoque..."
        python main.py || { echo "❌ Script falhou"; cat *.log; exit 1; }

    - name: 📁 Upload logs de execução
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: stock-check-logs-${{ github.run_number }}
        path: |
          *.csv
          *.log
        retention-days: 30

    - name: 📧 Notificar resultado (sucesso)
      if: success()
      run: |
        echo "✅ Verificação de estoque concluída com sucesso!"

    - name: 📧 Notificar resultado (falha)
      if: failure()
      run: |
        echo "❌ Verificação de estoque falhou!"

  weekly-report:
    name: 📈 Relatório Semanal
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 9 * * 1'  # Apenas nas segundas-feiras
    needs: stock-check

    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4

    - name: 🐍 Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: 📊 Gerar relatório semanal
      run: |
        echo "📈 Gerando relatório semanal..."
        echo "✅ Relatório gerado!"

# Configuração de notificações por email (opcional)
# Adicione esta seção se quiser receber emails sobre execuções
# notify:
#    name: 📧 Notificações
#    runs-on: ubuntu-latest
#    needs: stock-check
#    if: always()
#    
#    steps:
#    - name: 📧 Enviar email de notificação
#      if: always()
#      uses: dawidd6/action-send-mail@v3
#      with:
#        server_address: smtp.gmail.com
#        server_port: 587
#        username: ${{ secrets.EMAIL_USERNAME }}
#        password: ${{ secrets.EMAIL_PASSWORD }}
#        subject: |
#          ${{ job.status == 'success' && '✅' || '❌' }} Stock Check - ${{ github.run_number }}
#        body: |
#          Status: ${{ job.status }}
#          Workflow: ${{ github.workflow }}
#          Run: ${{ github.run_number }}
#          Timestamp: ${{ github.event.head_commit.timestamp }}
          
#          ${{ job.status == 'success' && 'Verificação de estoque executada com sucesso!' || 'Falha na verificação de estoque. Verifique os logs.' }}
#        to: seu-email@exemplo.com
#        from: Sistema de Estoque <noreply@exemplo.com>
