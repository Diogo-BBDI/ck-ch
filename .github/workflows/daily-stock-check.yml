# .github/workflows/daily-stock-check.yml
# Workflow para execução automática diária do sistema de verificação de estoque

name: 🤖 Daily Stock Check - Sistema Magento

on:
  schedule:
    # 04:00 BRT = 07:00 UTC
    - cron: '0 7 * * *'
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Modo de teste (processa apenas N itens)'
        type: choice
        options: [false, true]
        default: false
      batch_size:
        description: 'Quantidade a processar quando test_mode=true'
        type: number
        default: 50
      incremental_write:
        description: 'Escrita incremental na planilha'
        type: choice
        options: [true, false]
        default: true
      flush_every:
        description: 'Flush a cada N itens concluídos'
        type: number
        default: 500
      flush_seconds:
        description: 'Flush a cada N segundos'
        type: number
        default: 120
      chunk_size:
        description: 'Tamanho do bloco ao escrever no Sheets'
        type: number
        default: 1000
      rate_limit:
        description: 'Intervalo entre tentativas do algoritmo (seg)'
        type: string
        default: "0.1"
      max_workers:
        description: 'Concorrência (tarefas simultâneas)'
        type: number
        default: 20

permissions:
  contents: read

jobs:
  stock-check:
    name: 📊 Verificação de Estoque
    runs-on: ubuntu-latest
    timeout-minutes: 300  # até 5h

    env:
      # Caminho do arquivo de credenciais Google que vamos escrever
      GOOGLE_APPLICATION_CREDENTIALS: /tmp/google-credentials.json

      # SENSÍVEIS → SEMPRE via SECRETS
      SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
      MAGENTO_BASE_URL: ${{ secrets.MAGENTO_BASE_URL }}
      # MAX_STOCK não é sensível; se quiser também pode ir em vars
      MAX_STOCK: ${{ vars.MAX_STOCK || '5000' }}

      # Defaults para execução agendada; se for manual, usa inputs
      TEST_MODE: ${{ github.event_name == 'workflow_dispatch' && inputs.test_mode || 'false' }}
      BATCH_SIZE: ${{ github.event_name == 'workflow_dispatch' && inputs.batch_size || '50' }}

      # Performance / concorrência
      RATE_LIMIT: ${{ github.event_name == 'workflow_dispatch' && inputs.rate_limit || '0.1' }}
      MAX_WORKERS: ${{ github.event_name == 'workflow_dispatch' && inputs.max_workers || '20' }}

      # Escrita incremental no Sheets
      INCREMENTAL_WRITE: ${{ github.event_name == 'workflow_dispatch' && inputs.incremental_write || 'true' }}
      FLUSH_EVERY: ${{ github.event_name == 'workflow_dispatch' && inputs.flush_every || '500' }}
      FLUSH_SECONDS: ${{ github.event_name == 'workflow_dispatch' && inputs.flush_seconds || '120' }}
      CHUNK_SIZE: ${{ github.event_name == 'workflow_dispatch' && inputs.chunk_size || '1000' }}

    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: 🔐 Configurar credenciais Google
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}  # JSON puro
        run: |
          echo "$GOOGLE_CREDENTIALS" > "$GOOGLE_APPLICATION_CREDENTIALS"
          ls -l "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: ✅ Preflight env check
        run: |
          test -n "$SPREADSHEET_ID" || { echo "SPREADSHEET_ID não definido (secrets)"; exit 1; }
          test -n "$MAGENTO_BASE_URL" || { echo "MAGENTO_BASE_URL não definido (secrets)"; exit 1; }
          test -n "$GOOGLE_APPLICATION_CREDENTIALS" || { echo "GOOGLE_APPLICATION_CREDENTIALS ausente"; exit 1; }

      - name: 📦 Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🚀 Executar verificação de estoque
        env:
          MAGENTO_API_KEY: ${{ secrets.MAGENTO_API_KEY }}
        run: |
          echo "🚀 Iniciando verificação de estoque..."
          if ! python main.py; then
            echo "❌ Script falhou"
            ls -1 *.log 2>/dev/null || true
            cat *.log 2>/dev/null || true
            exit 1
          fi

      - name: 📁 Upload logs de execução
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: stock-check-logs-${{ github.run_number }}
          path: |
            *.log
          if-no-files-found: ignore
          retention-days: 30
