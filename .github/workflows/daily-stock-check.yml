name: 🤖 Daily Stock Check - Sistema Magento (Daily + Manual)

on:
  schedule:
    # 04:00 BRT = 07:00 UTC
    - cron: '0 7 * * *'
  workflow_dispatch:
    inputs:
      test_mode:
        description: "TEST_MODE (manual)"
        type: choice
        options: [true, false]
        default: true
      batch_size:
        description: "BATCH_SIZE (manual)"
        type: number
        default: 50
      incremental_write:
        description: "INCREMENTAL_WRITE (manual)"
        type: choice
        options: [true, false]
        default: true
      flush_every:
        description: "FLUSH_EVERY (manual)"
        type: number
        default: 500
      flush_seconds:
        description: "FLUSH_SECONDS (manual)"
        type: number
        default: 120
      chunk_size:
        description: "CHUNK_SIZE (manual)"
        type: number
        default: 1000
      rate_limit:
        description: "RATE_LIMIT (manual)"
        type: string
        default: "0.1"
      max_workers:
        description: "MAX_WORKERS (manual)"
        type: number
        default: 20

permissions:
  contents: read

jobs:
  run:
    runs-on: ubuntu-latest

    env:
      # Vars fixas do repositório (Settings > Variables)
      SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
      MAGENTO_BASE_URL: ${{ secrets.MAGENTO_BASE_URL }}
      MAX_STOCK: ${{ vars.MAX_STOCK || '5000' }}
      GOOGLE_APPLICATION_CREDENTIALS: /tmp/google-credentials.json

      # Agendado = produção; Manual = usa inputs
      TEST_MODE: ${{ github.event_name == 'workflow_dispatch' && inputs.test_mode || 'false' }}
      BATCH_SIZE: ${{ github.event_name == 'workflow_dispatch' && inputs.batch_size || '50' }}

      # Performance / concorrência
      RATE_LIMIT: ${{ github.event_name == 'workflow_dispatch' && inputs.rate_limit || '0.1' }}
      MAX_WORKERS: ${{ github.event_name == 'workflow_dispatch' && inputs.max_workers || '20' }}

      # Escrita incremental no Sheets
      INCREMENTAL_WRITE: ${{ github.event_name == 'workflow_dispatch' && inputs.incremental_write || 'true' }}
      FLUSH_EVERY: ${{ github.event_name == 'workflow_dispatch' && inputs.flush_every || '500' }}
      FLUSH_SECONDS: ${{ github.event_name == 'workflow_dispatch' && inputs.flush_seconds || '120' }}
      CHUNK_SIZE: ${{ github.event_name == 'workflow_dispatch' && inputs.chunk_size || '1000' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Write Google credentials (from secret base64)
        shell: bash
        run: |
          echo "$GOOGLE_CREDENTIALS_B64" | base64 -d > "$GOOGLE_APPLICATION_CREDENTIALS"
          ls -l "$GOOGLE_APPLICATION_CREDENTIALS"
        env:
          GOOGLE_CREDENTIALS_B64: ${{ secrets.GOOGLE_CREDENTIALS_B64 }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run stock check
        shell: bash
        env:
          MAGENTO_API_KEY: ${{ secrets.MAGENTO_API_KEY }}
        run: |
          echo "🚀 Iniciando verificação de estoque..."
          if ! python main.py; then
            echo "❌ Script falhou"
            ls -1 *.log 2>/dev/null || true
            cat *.log 2>/dev/null || true
            exit 1
          fi

      - name: Upload logs (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: |
            *.log
          if-no-files-found: ignore
